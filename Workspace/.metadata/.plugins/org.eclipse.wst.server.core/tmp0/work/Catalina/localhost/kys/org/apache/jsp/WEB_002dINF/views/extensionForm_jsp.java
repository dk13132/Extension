/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-10-16 11:29:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class extensionForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>파일 확장자 차단</title>\r\n");
      out.write("<style>\r\n");
      out.write("hr {\r\n");
      out.write("\theight: 2px;\r\n");
      out.write("\tbackground-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#extensionList {\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tborder-radius: 0.5em;\r\n");
      out.write("\theight: auto;\r\n");
      out.write("\tmargin-left: 140px;\r\n");
      out.write("\tmargin-top: 10px;\r\n");
      out.write("\tmin-height: 300px;\r\n");
      out.write("\twidth: 500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#customExtension {\r\n");
      out.write("\tborder-radius: 0.5em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".addDiv {\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tborder-radius: 0.5em;\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("\tpadding-left: 10px;\r\n");
      out.write("\tpadding-right: 10px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("\tmargin-left: 10px\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tload();\r\n");
      out.write("\t\t$(\".check\").click(function() { //고정 확장자 체크 및 체크해제 이벤트\r\n");
      out.write("\t\t\tvar name = $(this).val();\r\n");
      out.write("\t\t\tvar type = \"F\";\r\n");
      out.write("\t\t\t//var params = \"name=\" + name + \"&type=\" + type;\r\n");
      out.write("\t\t\tif ($(this).prop(\"checked\") == true) {\r\n");
      out.write("\t\t\t\turl = \"extensionAdd/\" + name + \"/\" + type;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\turl = \"extensionDelete/\" + name;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tcheckAjax(url);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#customAdd\").click(function() {\r\n");
      out.write("\t\t\tvar name = $(\"#customExtension\").val();\r\n");
      out.write("\t\t\tvar type = \"C\"\r\n");
      out.write("\t\t\tvar url = \"extensionAdd/\" + name + \"/\" + type;\r\n");
      out.write("\t\t\tif ($(\"#inputCount\").val() > 200) {\r\n");
      out.write("\t\t\t\talert(\"더 이상 추가 할 수 없습니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (name == \"\") {\r\n");
      out.write("\t\t\t\talert(\"확장자를 입력해주세요.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tcheckAjax(url);\r\n");
      out.write("\t\t\tvar name = $(\"#customExtension\").val(\"\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).on(\"click\", \".btn\", function() {\r\n");
      out.write("\t\t\tvar name = $(this).prop(\"id\");\r\n");
      out.write("\t\t\tvar url = \"extensionDelete/\" + name;\r\n");
      out.write("\t\t\t$(\"#\" + name + \"Div\").remove();\r\n");
      out.write("\t\t\tcheckAjax(url);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tfunction addExtension(name) {\r\n");
      out.write("\t\t$(\"#extensionList\")\r\n");
      out.write("\t\t\t\t.append(\r\n");
      out.write("\t\t\t\t\t\t\"<div class='addDiv' id='\" + name + \"Div'>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ name\r\n");
      out.write("\t\t\t\t\t\t\t\t+ \"<input type='button' class='btn' id='\" + name + \"' value='X'></div>\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction checkAjax(url) {\r\n");
      out.write("\t\tvar name = $(\"#customExtension\").val();\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\turl : url\r\n");
      out.write("\t\t}).done(function(args) {\r\n");
      out.write("\t\t\tif (args == \"err\") {\r\n");
      out.write("\t\t\t\talert(\"중복 된 확장자가 존재합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} else if (args == \"fixingErr\") {\r\n");
      out.write("\t\t\t\talert(\"고정 확장자는 커스텀 확장자로 추가 할 수 없습니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} else if (args == \"addSuccess\") {\r\n");
      out.write("\t\t\t\taddExtension(name);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tcount();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction load() {\r\n");
      out.write("\t\tcount();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\turl : \"extensionSelect\",\r\n");
      out.write("\t\t}).done(function(args) {\r\n");
      out.write("\t\t\tif (args !== null) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < args.length; i++) {\r\n");
      out.write("\t\t\t\t\tif (args[i].type == \"F\") {\r\n");
      out.write("\t\t\t\t\t\t$(\"#\" + args[i].name).prop(\"checked\", true);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\taddExtension(args[i].name);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction count() {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\turl : \"count\",\r\n");
      out.write("\t\t}).done(function(args) {\r\n");
      out.write("\t\t\t$(\"#count\").html(\"&nbsp;\" + args + \"/200\");\r\n");
      out.write("\t\t\t$(\"#inputCount\").val(args);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<input type=\"hidden\" id=\"inputCount\">\r\n");
      out.write("\t<form method=\"post\" enctype=\"multipart/form-data\" action=\"fileUpload\">\r\n");
      out.write("\t\t<input type=\"file\" name=\"file\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"파일 등록\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<h2>◎ 파일 확장자 차단</h2>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t파일확장자에 따라 특정 형식의 파일을 첨부하거나 전송하지 못하도록 제한\r\n");
      out.write("\t<br> 고정 확장자 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"bat\" value=\"bat\" /> bat\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"cmd\" value=\"cmd\" /> cmd\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"com\" value=\"com\" /> com\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"cpl\" value=\"cpl\" /> cpl\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"exe\" value=\"exe\" /> exe\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"scr\" value=\"scr\" /> scr\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t<input type=\"checkbox\" class=\"check\" id=\"js\" value=\"js\" /> js &nbsp;\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br> 커스텀 확장자 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"text\" id=\"customExtension\" name=\"customExtension\"\r\n");
      out.write("\t\tmaxlength=\"20\" />\r\n");
      out.write("\t<input type=\"button\" id=\"customAdd\" value=\"+추가\" />\r\n");
      out.write("\t<div id=\"extensionList\">\r\n");
      out.write("\t\t<div id=\"count\">&nbsp;0/200</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
